name: test-publish-to-pypi

on:
  push:
    tags:
      - 'test*'

jobs:
  build-release:
    name: Build release wheel
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-latest, windows-latest ]
        python: ['3.9', '3.10']
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up MinGW
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-mingw@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python}}
      - name: Install pypa/build and auditwheel
        run: >-
          python -m
          pip install
          build
          auditwheel
          --user
      - name: Build a wheel and source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
      - name: Audit resulting wheel into Manylinux
        if: matrix.os == 'ubuntu-18.04'
        run: >-
          python -m
          auditwheel
          repair dist/*.whl
          -w dist/
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/*manylinux*.whl
            dist/*win*.whl
            dist/*macos*.whl
            dist/*.tar.gz
  publish-test:
    name: Publish to TestPyPI
    needs: build-release
    runs-on: ubuntu-latest
    environment: TestPyPI
    steps:
      - name: Retrieve built archive
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
